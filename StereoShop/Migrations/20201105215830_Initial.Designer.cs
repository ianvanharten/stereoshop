// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StereoShop.Models;

namespace StereoShop.Migrations
{
    [DbContext(typeof(StereoShopContext))]
    [Migration("20201105215830_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StereoShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Record Player"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Receiver"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Speakers"
                        });
                });

            modelBuilder.Entity("StereoShop.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Code = "rp-sony",
                            Name = "Sony PS-LX310",
                            Price = 289.99000000000001
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Code = "rp-audio-technica",
                            Name = "Audio-Technica AT-LP60",
                            Price = 229.99000000000001
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Code = "rp-toshiba",
                            Name = "Toshiba TY-LP200",
                            Price = 299.94999999999999
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Code = "rp-crosley",
                            Name = "Crosley CR800",
                            Price = 129.99000000000001
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Code = "rp-victrola",
                            Name = "Victrola VS-990",
                            Price = 99.989999999999995
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Code = "rec-yamaha",
                            Name = "Yamaha RX-397",
                            Price = 599.99000000000001
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            Code = "rec-sony",
                            Name = "Sony STR-DH190",
                            Price = 249.94999999999999
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2,
                            Code = "rec-pioneer",
                            Name = "Pioneer SX10",
                            Price = 349.99000000000001
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            Code = "rec-onkyo",
                            Name = "Onkyo TX8220",
                            Price = 499.99000000000001
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2,
                            Code = "rec-insignia",
                            Name = "Insignia NS-STR",
                            Price = 159.99000000000001
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            Code = "sp-klipsch",
                            Name = "Klipsch R-820F",
                            Price = 550.99000000000001
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 3,
                            Code = "sp-polk",
                            Name = "Polk T50",
                            Price = 299.99000000000001
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 3,
                            Code = "sp-totem",
                            Name = "Totem Forest",
                            Price = 899.99000000000001
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 3,
                            Code = "sp-sony",
                            Name = "Sony SS-CS3",
                            Price = 389.99000000000001
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 3,
                            Code = "sp-jbl",
                            Name = "JBL A170",
                            Price = 409.99000000000001
                        });
                });

            modelBuilder.Entity("StereoShop.Models.Product", b =>
                {
                    b.HasOne("StereoShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
